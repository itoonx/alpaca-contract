{
  "manifestVersion": "3.1",
  "impls": {
    "161a2337b77b4036b905f0242e930b6efde4c2764d743924da6b98db20e2e948": {
      "address": "0x106fb4c32DE618483e46aD5F474647c5488FC5B0",
      "txHash": "0x7d1cccce467b1235ff35ceb476b12d861a46be186f8a1784c2b0141d3d526df8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "FairLaunch",
            "label": "alpaca",
            "type": "t_contract(AlpacaToken)14807",
            "src": "contracts/6/token/FairLaunch.sol:48"
          },
          {
            "contract": "FairLaunch",
            "label": "devaddr",
            "type": "t_address",
            "src": "contracts/6/token/FairLaunch.sol:50"
          },
          {
            "contract": "FairLaunch",
            "label": "alpacaPerBlock",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:52"
          },
          {
            "contract": "FairLaunch",
            "label": "bonusMultiplier",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:54"
          },
          {
            "contract": "FairLaunch",
            "label": "bonusEndBlock",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:56"
          },
          {
            "contract": "FairLaunch",
            "label": "bonusLockUpBps",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:58"
          },
          {
            "contract": "FairLaunch",
            "label": "migrator",
            "type": "t_contract(IMigratorFairLaunch)16187",
            "src": "contracts/6/token/FairLaunch.sol:60"
          },
          {
            "contract": "FairLaunch",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)14847_storage)dyn_storage",
            "src": "contracts/6/token/FairLaunch.sol:63"
          },
          {
            "contract": "FairLaunch",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)14836_storage))",
            "src": "contracts/6/token/FairLaunch.sol:65"
          },
          {
            "contract": "FairLaunch",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:67"
          },
          {
            "contract": "FairLaunch",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:69"
          }
        ],
        "types": {
          "t_contract(AlpacaToken)14807": {
            "label": "contract AlpacaToken"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IMigratorFairLaunch)16187": {
            "label": "contract IMigratorFairLaunch"
          },
          "t_array(t_struct(PoolInfo)14847_storage)dyn_storage": {
            "label": "struct FairLaunch.PoolInfo[]"
          },
          "t_struct(PoolInfo)14847_storage": {
            "label": "struct FairLaunch.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_address"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accAlpacaPerShare",
                "type": "t_uint256"
              },
              {
                "label": "accAlpacaPerShareTilBonusEnd",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)14836_storage))": {
            "label": "mapping(uint256 => mapping(address => struct FairLaunch.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)14836_storage)": {
            "label": "mapping(address => struct FairLaunch.UserInfo)"
          },
          "t_struct(UserInfo)14836_storage": {
            "label": "struct FairLaunch.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "bonusDebt",
                "type": "t_uint256"
              },
              {
                "label": "fundedBy",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "15eb27b545de9888d81c91f4566a45abdb3156c0e41450edf1fe29cd90b35e75": {
      "address": "0xF207d1bf8416A92B9f818ef675b2c31454345072",
      "txHash": "0x420e10a9495026de8bc8be2cfb5362e811d8e4f14911c11179011b69880f4498",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "StrategyAddBaseTokenOnly",
            "label": "factory",
            "type": "t_contract(IUniswapV2Factory)1533",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyAddBaseTokenOnly.sol:20"
          },
          {
            "contract": "StrategyAddBaseTokenOnly",
            "label": "router",
            "type": "t_contract(IUniswapV2Router02)7017",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyAddBaseTokenOnly.sol:21"
          }
        ],
        "types": {
          "t_contract(IUniswapV2Factory)1533": {
            "label": "contract IUniswapV2Factory"
          },
          "t_contract(IUniswapV2Router02)7017": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2f0265bd18a99d0f08f7a1a993ddf61f41d22a9c112cfa40d8679cfc0cfdfb8c": {
      "address": "0xC10D2B82670879075191ddb7351cbd5128958Cd8",
      "txHash": "0x5b54fa1ea31f8a6bba04e1ead944165d5b61e8dc38b2b565ba14a821146fce0c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "StrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IUniswapV2Factory)1533",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyLiquidate.sol:17"
          },
          {
            "contract": "StrategyLiquidate",
            "label": "router",
            "type": "t_contract(IUniswapV2Router02)7017",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyLiquidate.sol:18"
          }
        ],
        "types": {
          "t_contract(IUniswapV2Factory)1533": {
            "label": "contract IUniswapV2Factory"
          },
          "t_contract(IUniswapV2Router02)7017": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "59b54aeac485618910716683f992a6b7f21092d96c65dc2c2ffcb1c243e88bee": {
      "address": "0xeBEc6563aFBFc3B0b3E6dB0a850071842Ea648D4",
      "txHash": "0xbcd9fd556b2f439eaf468e078c5006cb0a7329fc3d69aff1f70895d1360d89ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "minDebtSize",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:42"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getReservePoolBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:44"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getKillBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:46"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_contract(IWorkerConfig)10022)",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:48"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "interestModel",
            "type": "t_contract(InterestModel)2300",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:50"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "wrappedNative",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:52"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "wNativeRelayer",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:54"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "fairLaunch",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:57"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_contract(IWorkerConfig)10022)": {
            "label": "mapping(address => contract IWorkerConfig)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWorkerConfig)10022": {
            "label": "contract IWorkerConfig"
          },
          "t_contract(InterestModel)2300": {
            "label": "contract InterestModel"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "90340167bad7e1af082ba23fad39fbda991c72817d52c844bd6907036a43feea": {
      "address": "0x0126F71AFb76e16Fbaf6F4ee3E755378078dBA2F",
      "txHash": "0xca31ded9ad177a0fa90911864797bcbb2fed9b2e6249158e196fdd8b3bd6c985",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "SimplePriceOracle",
            "label": "feeder",
            "type": "t_address",
            "src": "contracts/6/protocol/SimplePriceOracle.sol:11"
          },
          {
            "contract": "SimplePriceOracle",
            "label": "store",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(PriceData)4534_storage))",
            "src": "contracts/6/protocol/SimplePriceOracle.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(PriceData)4534_storage))": {
            "label": "mapping(address => mapping(address => struct SimplePriceOracle.PriceData))"
          },
          "t_mapping(t_address,t_struct(PriceData)4534_storage)": {
            "label": "mapping(address => struct SimplePriceOracle.PriceData)"
          },
          "t_struct(PriceData)4534_storage": {
            "label": "struct SimplePriceOracle.PriceData",
            "members": [
              {
                "label": "price",
                "type": "t_uint192"
              },
              {
                "label": "lastUpdate",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "afccb811cb75ad4e0b272f3371b1d6ef9da09bb5296542187aea4f702d810fb7": {
      "address": "0x99eDc7a16C2f6ee87a10bB85397AB3A6Ad1063b8",
      "txHash": "0x74eb3f7826d33933ead283471f46f0cebfd0bb85d67164a0db81de03a504c19b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "UniswapWorkerConfig",
            "label": "oracle",
            "type": "t_contract(PriceOracle)4510",
            "src": "contracts/6/protocol/workers/UniswapWorkerConfig.sol:29"
          },
          {
            "contract": "UniswapWorkerConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_struct(Config)13381_storage)",
            "src": "contracts/6/protocol/workers/UniswapWorkerConfig.sol:30"
          }
        ],
        "types": {
          "t_contract(PriceOracle)4510": {
            "label": "contract PriceOracle"
          },
          "t_mapping(t_address,t_struct(Config)13381_storage)": {
            "label": "mapping(address => struct UniswapWorkerConfig.Config)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Config)13381_storage": {
            "label": "struct UniswapWorkerConfig.Config",
            "members": [
              {
                "label": "acceptDebt",
                "type": "t_bool"
              },
              {
                "label": "workFactor",
                "type": "t_uint64"
              },
              {
                "label": "killFactor",
                "type": "t_uint64"
              },
              {
                "label": "maxPriceDiff",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f837206ea7531c10dd48f7528a75c4b7c512b3c95f812a9fff53025f969559c1": {
      "address": "0xF0Fcf676AEAeD3C05022b0E90A6C610ADf0096Ee",
      "txHash": "0x4ef7d7babc0426c1acffb7ec9456ab91c2576020ebd489cbbe1bfca4c510d903",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:37"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:38"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:39"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:47"
          },
          {
            "contract": "Vault",
            "label": "debtToken",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:48"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)10045",
            "src": "contracts/6/protocol/Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)5102_storage)",
            "src": "contracts/6/protocol/Vault.sol:57"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:58"
          },
          {
            "contract": "Vault",
            "label": "fairLaunchPoolId",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:59"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:61"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtVal",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:62"
          },
          {
            "contract": "Vault",
            "label": "lastAccrueTime",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:63"
          },
          {
            "contract": "Vault",
            "label": "reservePool",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:64"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)10045": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)5102_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)5102_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "debtShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f67d68a9f0f35e3424e1e75b4c83db0b6de93b11dcea0e65a90e1316ee50c97": {
      "address": "0x726B79438B79090F3C6fcF127B8490e5837D61Be",
      "txHash": "0xd0490b438b568f79cc6bd258f0275e4433576b307bd38fb31ae9e8bf3abe073a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "SushiswapWorker",
            "label": "masterChef",
            "type": "t_contract(IMasterChef)9834",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:31"
          },
          {
            "contract": "SushiswapWorker",
            "label": "factory",
            "type": "t_contract(IUniswapV2Factory)1533",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:32"
          },
          {
            "contract": "SushiswapWorker",
            "label": "router",
            "type": "t_contract(IUniswapV2Router02)7012",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:33"
          },
          {
            "contract": "SushiswapWorker",
            "label": "lpToken",
            "type": "t_contract(IUniswapV2Pair)1775",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:34"
          },
          {
            "contract": "SushiswapWorker",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:35"
          },
          {
            "contract": "SushiswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:36"
          },
          {
            "contract": "SushiswapWorker",
            "label": "quoteToken",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:37"
          },
          {
            "contract": "SushiswapWorker",
            "label": "sushi",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:38"
          },
          {
            "contract": "SushiswapWorker",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:39"
          },
          {
            "contract": "SushiswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:40"
          },
          {
            "contract": "SushiswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:43"
          },
          {
            "contract": "SushiswapWorker",
            "label": "okStrats",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:44"
          },
          {
            "contract": "SushiswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:45"
          },
          {
            "contract": "SushiswapWorker",
            "label": "addStrat",
            "type": "t_contract(IStrategy)9847",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:46"
          },
          {
            "contract": "SushiswapWorker",
            "label": "liqStrat",
            "type": "t_contract(IStrategy)9847",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:47"
          },
          {
            "contract": "SushiswapWorker",
            "label": "reinvestBountyBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/SushiswapWorker.sol:48"
          }
        ],
        "types": {
          "t_contract(IMasterChef)9834": {
            "label": "contract IMasterChef"
          },
          "t_contract(IUniswapV2Factory)1533": {
            "label": "contract IUniswapV2Factory"
          },
          "t_contract(IUniswapV2Router02)7012": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(IUniswapV2Pair)1775": {
            "label": "contract IUniswapV2Pair"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStrategy)9847": {
            "label": "contract IStrategy"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bddbc06463634b292ba94b98ff70529d6c3ec452b0e4b519bd23391fc2ad223a": {
      "address": "0x75853Ae0C21aD471D1C805CCf69D59616835482e",
      "txHash": "0x37a0e4a51262419674ccfec06159dc71b524da96d7ac40bdda57d20c1e36904f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "StrategyAddTwoSidesOptimal",
            "label": "factory",
            "type": "t_contract(IUniswapV2Factory)1533",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyAddTwoSidesOptimal.sol:22"
          },
          {
            "contract": "StrategyAddTwoSidesOptimal",
            "label": "router",
            "type": "t_contract(IUniswapV2Router02)7012",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyAddTwoSidesOptimal.sol:23"
          },
          {
            "contract": "StrategyAddTwoSidesOptimal",
            "label": "vault",
            "type": "t_contract(IVault)9876",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyAddTwoSidesOptimal.sol:24"
          }
        ],
        "types": {
          "t_contract(IUniswapV2Factory)1533": {
            "label": "contract IUniswapV2Factory"
          },
          "t_contract(IUniswapV2Router02)7012": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(IVault)9876": {
            "label": "contract IVault"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7f29d4fd64f3656c2c27c15f92ba44e0910ee99be21b0bcbc9fd9c46f4b6044d": {
      "address": "0x89c45bc7C96C6174A78EE62B6F72be8f55966779",
      "txHash": "0xc18f3eed3a729895599b8bd6bafcd7df9df682bc3bb2df9c64cfdcd94c8b89fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "minDebtSize",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:42"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getReservePoolBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:44"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "getKillBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:46"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_contract(IWorkerConfig)10034)",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:48"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "interestModel",
            "type": "t_contract(InterestModel)2300",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:50"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "wrappedNative",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:52"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "wNativeRelayer",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:54"
          },
          {
            "contract": "ConfigurableInterestVaultConfig",
            "label": "fairLaunch",
            "type": "t_address",
            "src": "contracts/6/protocol/ConfigurableInterestVaultConfig.sol:57"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_contract(IWorkerConfig)10034)": {
            "label": "mapping(address => contract IWorkerConfig)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IWorkerConfig)10034": {
            "label": "contract IWorkerConfig"
          },
          "t_contract(InterestModel)2300": {
            "label": "contract InterestModel"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7803e1189164d4411ba12ab8eccfa8fb70fb18537002706538b1f91a3d1d9dcc": {
      "address": "0x64019821BBb6D7B15084d30A42b438e4Caaa3848",
      "txHash": "0x56031c4d39ca744cc128e14f65c27d735c7fa6b1773f8698cc7a436e2d062123",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "FairLaunch",
            "label": "alpaca",
            "type": "t_contract(AlpacaToken)14820",
            "src": "contracts/6/token/FairLaunch.sol:48"
          },
          {
            "contract": "FairLaunch",
            "label": "devaddr",
            "type": "t_address",
            "src": "contracts/6/token/FairLaunch.sol:50"
          },
          {
            "contract": "FairLaunch",
            "label": "alpacaPerBlock",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:52"
          },
          {
            "contract": "FairLaunch",
            "label": "bonusMultiplier",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:54"
          },
          {
            "contract": "FairLaunch",
            "label": "bonusEndBlock",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:56"
          },
          {
            "contract": "FairLaunch",
            "label": "bonusLockUpBps",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:58"
          },
          {
            "contract": "FairLaunch",
            "label": "migrator",
            "type": "t_contract(IMigratorFairLaunch)16200",
            "src": "contracts/6/token/FairLaunch.sol:60"
          },
          {
            "contract": "FairLaunch",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)14860_storage)dyn_storage",
            "src": "contracts/6/token/FairLaunch.sol:63"
          },
          {
            "contract": "FairLaunch",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)14849_storage))",
            "src": "contracts/6/token/FairLaunch.sol:65"
          },
          {
            "contract": "FairLaunch",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:67"
          },
          {
            "contract": "FairLaunch",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:69"
          }
        ],
        "types": {
          "t_contract(AlpacaToken)14820": {
            "label": "contract AlpacaToken"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IMigratorFairLaunch)16200": {
            "label": "contract IMigratorFairLaunch"
          },
          "t_array(t_struct(PoolInfo)14860_storage)dyn_storage": {
            "label": "struct FairLaunch.PoolInfo[]"
          },
          "t_struct(PoolInfo)14860_storage": {
            "label": "struct FairLaunch.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_address"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accAlpacaPerShare",
                "type": "t_uint256"
              },
              {
                "label": "accAlpacaPerShareTilBonusEnd",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)14849_storage))": {
            "label": "mapping(uint256 => mapping(address => struct FairLaunch.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)14849_storage)": {
            "label": "mapping(address => struct FairLaunch.UserInfo)"
          },
          "t_struct(UserInfo)14849_storage": {
            "label": "struct FairLaunch.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "bonusDebt",
                "type": "t_uint256"
              },
              {
                "label": "fundedBy",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dc6e334931f4d334fc81dece778fc3093a8e2fc3b061e65f1782a23c4eab4c0b": {
      "address": "0x99b8884cF9b63A30667C58B3a3C956B06B87F004",
      "txHash": "0x6447c5db6d1db53d30f7fee66c258379ed9258f93015cca314b16faf1fd94265",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "aab64d3cdd377503891f44891b3f87d42ee9f0eab20ea7207f6c9509b070d8b6": {
      "address": "0x384db783E23eD426Fcb6237a4D43f6158D178801",
      "txHash": "0x63e0d05136956ecba0888e7a682fca8214eeefde2c9686fb184487fd8bb793a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "FairLaunch",
            "label": "alpaca",
            "type": "t_contract(AlpacaToken)16298",
            "src": "contracts/6/token/FairLaunch.sol:48"
          },
          {
            "contract": "FairLaunch",
            "label": "devaddr",
            "type": "t_address",
            "src": "contracts/6/token/FairLaunch.sol:50"
          },
          {
            "contract": "FairLaunch",
            "label": "alpacaPerBlock",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:52"
          },
          {
            "contract": "FairLaunch",
            "label": "bonusMultiplier",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:54"
          },
          {
            "contract": "FairLaunch",
            "label": "bonusEndBlock",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:56"
          },
          {
            "contract": "FairLaunch",
            "label": "bonusLockUpBps",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:58"
          },
          {
            "contract": "FairLaunch",
            "label": "migrator",
            "type": "t_contract(IMigratorFairLaunch)17690",
            "src": "contracts/6/token/FairLaunch.sol:60"
          },
          {
            "contract": "FairLaunch",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)16338_storage)dyn_storage",
            "src": "contracts/6/token/FairLaunch.sol:63"
          },
          {
            "contract": "FairLaunch",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)16327_storage))",
            "src": "contracts/6/token/FairLaunch.sol:65"
          },
          {
            "contract": "FairLaunch",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:67"
          },
          {
            "contract": "FairLaunch",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/6/token/FairLaunch.sol:69"
          }
        ],
        "types": {
          "t_contract(AlpacaToken)16298": {
            "label": "contract AlpacaToken"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IMigratorFairLaunch)17690": {
            "label": "contract IMigratorFairLaunch"
          },
          "t_array(t_struct(PoolInfo)16338_storage)dyn_storage": {
            "label": "struct FairLaunch.PoolInfo[]"
          },
          "t_struct(PoolInfo)16338_storage": {
            "label": "struct FairLaunch.PoolInfo",
            "members": [
              {
                "label": "stakeToken",
                "type": "t_address"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accAlpacaPerShare",
                "type": "t_uint256"
              },
              {
                "label": "accAlpacaPerShareTilBonusEnd",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)16327_storage))": {
            "label": "mapping(uint256 => mapping(address => struct FairLaunch.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)16327_storage)": {
            "label": "mapping(address => struct FairLaunch.UserInfo)"
          },
          "t_struct(UserInfo)16327_storage": {
            "label": "struct FairLaunch.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "bonusDebt",
                "type": "t_uint256"
              },
              {
                "label": "fundedBy",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "026142ba7a51ea17afdba8db51649e139fcb3a6937b369582ba7b8c94ee88cea": {
      "address": "0xE739A8d6AaDbD4fa44Ad7541f8a5a5D7dbfD25F4",
      "txHash": "0x337ba8050b40bc83c4868b86fd4f871b17abdc38c7df5e11c25ff929203cc13c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "StrategyAddBaseTokenOnly",
            "label": "factory",
            "type": "t_contract(IUniswapV2Factory)1533",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyAddBaseTokenOnly.sol:20"
          },
          {
            "contract": "StrategyAddBaseTokenOnly",
            "label": "router",
            "type": "t_contract(IUniswapV2Router02)7076",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyAddBaseTokenOnly.sol:21"
          }
        ],
        "types": {
          "t_contract(IUniswapV2Factory)1533": {
            "label": "contract IUniswapV2Factory"
          },
          "t_contract(IUniswapV2Router02)7076": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "16eb2d598a98c1b50ee4e5d1b76001180b1fbfbd5b86f451536394b46b1b2c8f": {
      "address": "0x5dd4422c6541a59F5C788d43A014004CF614bBfA",
      "txHash": "0x5d435103d6175c6fbeae75ddb7c2a3526bb84debeb057986620938ebf1458f07",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "StrategyLiquidate",
            "label": "factory",
            "type": "t_contract(IUniswapV2Factory)1533",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyLiquidate.sol:17"
          },
          {
            "contract": "StrategyLiquidate",
            "label": "router",
            "type": "t_contract(IUniswapV2Router02)7076",
            "src": "contracts/6/protocol/strategies/unisushiswap/StrategyLiquidate.sol:18"
          }
        ],
        "types": {
          "t_contract(IUniswapV2Factory)1533": {
            "label": "contract IUniswapV2Factory"
          },
          "t_contract(IUniswapV2Router02)7076": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6c883b146c73b165c5657fe34f9eb19c86870b61d1141bb7bcfe3617158d2576": {
      "address": "0xf6C9ebd3C5ACe90957f0dF3219E6d5A902554840",
      "txHash": "0xc59f8d46a0f702afbb94e7d3f35d3dba22d943d76f7f4790a3b9d147cb9406d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "UniswapWorkerConfig",
            "label": "oracle",
            "type": "t_contract(PriceOracle)4509",
            "src": "contracts/6/protocol/workers/UniswapWorkerConfig.sol:29"
          },
          {
            "contract": "UniswapWorkerConfig",
            "label": "workers",
            "type": "t_mapping(t_address,t_struct(Config)14865_storage)",
            "src": "contracts/6/protocol/workers/UniswapWorkerConfig.sol:30"
          }
        ],
        "types": {
          "t_contract(PriceOracle)4509": {
            "label": "contract PriceOracle"
          },
          "t_mapping(t_address,t_struct(Config)14865_storage)": {
            "label": "mapping(address => struct UniswapWorkerConfig.Config)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Config)14865_storage": {
            "label": "struct UniswapWorkerConfig.Config",
            "members": [
              {
                "label": "acceptDebt",
                "type": "t_bool"
              },
              {
                "label": "workFactor",
                "type": "t_uint64"
              },
              {
                "label": "killFactor",
                "type": "t_uint64"
              },
              {
                "label": "maxPriceDiff",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e7f6b47b25e8cd1cdd270eb6ef5de787c564e0a1b509bb323141430130ff0c8": {
      "address": "0x879FE936Fcc3B17b1F701991A5703B051213490F",
      "txHash": "0xfdedf6cb53a9194dc9bc56c924bc008a6ef18fea1c3ca58d39be9a6dd9ed0d36",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "masterChef",
            "type": "t_contract(IPancakeMasterChef)9918",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:31"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "factory",
            "type": "t_contract(IUniswapV2Factory)1533",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:32"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "router",
            "type": "t_contract(IUniswapV2Router02)7070",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:33"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "lpToken",
            "type": "t_contract(IUniswapV2Pair)1775",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:34"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "wNative",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:35"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "baseToken",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:36"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "quoteToken",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:37"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "cake",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:38"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "operator",
            "type": "t_address",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:39"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "pid",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:40"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "shares",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:43"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "okStrats",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:44"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "totalShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:45"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "addStrat",
            "type": "t_contract(IStrategy)9931",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:46"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "liqStrat",
            "type": "t_contract(IStrategy)9931",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:47"
          },
          {
            "contract": "PancakeswapWorker",
            "label": "reinvestBountyBps",
            "type": "t_uint256",
            "src": "contracts/6/protocol/workers/PancakeswapWorker.sol:48"
          }
        ],
        "types": {
          "t_contract(IPancakeMasterChef)9918": {
            "label": "contract IPancakeMasterChef"
          },
          "t_contract(IUniswapV2Factory)1533": {
            "label": "contract IUniswapV2Factory"
          },
          "t_contract(IUniswapV2Router02)7070": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(IUniswapV2Pair)1775": {
            "label": "contract IUniswapV2Pair"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IStrategy)9931": {
            "label": "contract IStrategy"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "914f5869a2b8ab79c11f6af49b5c870aa6cdca19bc63e19a957bce248cff7bd8": {
      "address": "0xfCBe4E179A928851CD1972E2ec6C2c82a0AA7a28",
      "txHash": "0xfb4ab5d9fdbb070220092685c0503e630d1f6f746c918fcee85aad4fc57392fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:37"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:38"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:39"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:47"
          },
          {
            "contract": "Vault",
            "label": "debtToken",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:48"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)10065",
            "src": "contracts/6/protocol/Vault.sol:56"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)5102_storage)",
            "src": "contracts/6/protocol/Vault.sol:57"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:58"
          },
          {
            "contract": "Vault",
            "label": "fairLaunchPoolId",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:59"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:61"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtVal",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:62"
          },
          {
            "contract": "Vault",
            "label": "lastAccrueTime",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:63"
          },
          {
            "contract": "Vault",
            "label": "reservePool",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:64"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)10065": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)5102_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)5102_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "debtShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d7b62848423c8c0885c38c4c3c2e724470e136b5731686ae9a38e21a2cdd088b": {
      "address": "0xD878CA970590652a8A7FAe6342fcf4D9e6262AB3",
      "txHash": "0x21c7d2c35d7df2a1e9e9a677b2206e05d1b9988816856b6327c17129a3c44d46",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "SimplePriceOracle",
            "label": "feeder",
            "type": "t_address",
            "src": "contracts/6/protocol/SimplePriceOracle.sol:11"
          },
          {
            "contract": "SimplePriceOracle",
            "label": "store",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(PriceData)6151_storage))",
            "src": "contracts/6/protocol/SimplePriceOracle.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(PriceData)6151_storage))": {
            "label": "mapping(address => mapping(address => struct SimplePriceOracle.PriceData))"
          },
          "t_mapping(t_address,t_struct(PriceData)6151_storage)": {
            "label": "mapping(address => struct SimplePriceOracle.PriceData)"
          },
          "t_struct(PriceData)6151_storage": {
            "label": "struct SimplePriceOracle.PriceData",
            "members": [
              {
                "label": "price",
                "type": "t_uint192"
              },
              {
                "label": "lastUpdate",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "766afa746ede251a2339a318d8d12854b250fe819ba9a132b6b0f952cb2bbc99": {
      "address": "0xDC2dAf9D9252a90350E1234153DE6CBb3166beE5",
      "txHash": "0x323fc33fa41657d01490f468e1bc3314f75561d7cb812470e18755b28d723cfb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Vault",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:39"
          },
          {
            "contract": "Vault",
            "label": "POSITION_ID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:40"
          },
          {
            "contract": "Vault",
            "label": "STRATEGY",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:41"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:49"
          },
          {
            "contract": "Vault",
            "label": "debtToken",
            "type": "t_address",
            "src": "contracts/6/protocol/Vault.sol:50"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IVaultConfig)11700",
            "src": "contracts/6/protocol/Vault.sol:58"
          },
          {
            "contract": "Vault",
            "label": "positions",
            "type": "t_mapping(t_uint256,t_struct(Position)6721_storage)",
            "src": "contracts/6/protocol/Vault.sol:59"
          },
          {
            "contract": "Vault",
            "label": "nextPositionID",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:60"
          },
          {
            "contract": "Vault",
            "label": "fairLaunchPoolId",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:61"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtShare",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:63"
          },
          {
            "contract": "Vault",
            "label": "vaultDebtVal",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:64"
          },
          {
            "contract": "Vault",
            "label": "lastAccrueTime",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:65"
          },
          {
            "contract": "Vault",
            "label": "reservePool",
            "type": "t_uint256",
            "src": "contracts/6/protocol/Vault.sol:66"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IVaultConfig)11700": {
            "label": "contract IVaultConfig"
          },
          "t_mapping(t_uint256,t_struct(Position)6721_storage)": {
            "label": "mapping(uint256 => struct Vault.Position)"
          },
          "t_struct(Position)6721_storage": {
            "label": "struct Vault.Position",
            "members": [
              {
                "label": "worker",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "debtShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x2c6c09b46d00A88161B7e4AcFaFEc58990548aC2",
    "txHash": "0xf60ec45c53a93170fca6a750b30d1577fd1adf6ef23fd4a21a15bf1afa9755f9"
  }
}
